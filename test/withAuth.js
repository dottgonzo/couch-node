"use strict";
var index_1 = require('../index');
var chai = require("chai");
var spawnPouchdbServer = require('spawn-pouchdb-server');
var expect = chai.expect;
var tmPort = 3435;
var couchDBDatabase = "http://localhost:" + tmPort + "/" + new Date().getTime;
var CouchManager;
before(function (done) {
    this.timeout(10000);
    spawnPouchdbServer({
        port: tmPort,
        backend: false,
        config: {
            admins: { "adminuser": "adminpass" },
            file: false
        },
        log: {
            file: false,
            level: 'info'
        }
    }, function (error, server) {
        if (error) {
            throw error;
        }
        else {
            CouchManager = new index_1.default(couchDBDatabase, { user: "adminuser", password: "adminpass" });
            done();
        }
    });
});
describe("db testing with auth", function () {
    it("create db", function (done) {
        CouchManager.createDB().then(function (d) {
            expect(d).to.be.ok;
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("create a document", function (done) {
        CouchManager.create({
            _id: 'ff'
        }).then(function (d) {
            expect(d).to.be.ok;
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("find a document", function (done) {
        CouchManager.find('ff').then(function (d) {
            expect(d).to.be.ok;
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
});

//# sourceMappingURL=data:application/json;base64,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Q0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQ3BCLENBQUMsQ0FBQyxDQUFBO0lBSU4sQ0FBQyxDQUFDLENBQUM7QUFHUCxDQUFDLENBQUMsQ0FBQSIsImZpbGUiOiJ0ZXN0L3dpdGhBdXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvdWNoTm9kZSBmcm9tICcuLi9pbmRleCc7XG5pbXBvcnQgY2hhaSA9IHJlcXVpcmUoXCJjaGFpXCIpO1xuXG5sZXQgc3Bhd25Qb3VjaGRiU2VydmVyID0gcmVxdWlyZSgnc3Bhd24tcG91Y2hkYi1zZXJ2ZXInKTtcblxubGV0IGV4cGVjdCA9IGNoYWkuZXhwZWN0O1xuXG5sZXQgdG1Qb3J0ID0gMzQzNTtcblxubGV0IGNvdWNoREJEYXRhYmFzZSA9IFwiaHR0cDovL2xvY2FsaG9zdDpcIiArIHRtUG9ydCArIFwiL1wiICsgbmV3IERhdGUoKS5nZXRUaW1lO1xuXG5sZXQgQ291Y2hNYW5hZ2VyO1xuXG5iZWZvcmUoZnVuY3Rpb24gKGRvbmUpIHtcbiAgICB0aGlzLnRpbWVvdXQoMTAwMDApO1xuICAgIHNwYXduUG91Y2hkYlNlcnZlcihcbiAgICAgICAge1xuICAgICAgICAgICAgcG9ydDogdG1Qb3J0LFxuICAgICAgICAgICAgYmFja2VuZDogZmFsc2UsXG4gICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICBhZG1pbnM6IHsgXCJhZG1pbnVzZXJcIjogXCJhZG1pbnBhc3NcIiB9LFxuICAgICAgICAgICAgICAgIGZpbGU6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9nOiB7XG4gICAgICAgICAgICAgICAgZmlsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgbGV2ZWw6ICdpbmZvJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IsIHNlcnZlcikge1xuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICBDb3VjaE1hbmFnZXIgPSBuZXcgQ291Y2hOb2RlKGNvdWNoREJEYXRhYmFzZSwgeyB1c2VyOiBcImFkbWludXNlclwiLCBwYXNzd29yZDogXCJhZG1pbnBhc3NcIiB9KTtcblxuICAgICAgICAgICAgICAgIGRvbmUoKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG59KTtcblxuZGVzY3JpYmUoXCJkYiB0ZXN0aW5nIHdpdGggYXV0aFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoXCJjcmVhdGUgZGJcIiwgZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgICAgQ291Y2hNYW5hZ2VyLmNyZWF0ZURCKCkudGhlbigoZCkgPT4ge1xuXG4gICAgICAgICAgICBleHBlY3QoZCkudG8uYmUub2s7XG4gICAgICAgICAgICBkb25lKCk7XG5cbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgZG9uZShFcnJvcihlcnIpKVxuICAgICAgICB9KVxuXG5cblxuICAgIH0pO1xuICAgIGl0KFwiY3JlYXRlIGEgZG9jdW1lbnRcIiwgZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgICAgQ291Y2hNYW5hZ2VyLmNyZWF0ZSh7XG4gICAgICAgICAgICBfaWQ6ICdmZidcbiAgICAgICAgfSkudGhlbigoZCkgPT4ge1xuXG4gICAgICAgICAgICBleHBlY3QoZCkudG8uYmUub2s7XG4gICAgICAgICAgICBkb25lKCk7XG5cbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgZG9uZShFcnJvcihlcnIpKVxuICAgICAgICB9KVxuXG5cblxuICAgIH0pO1xuICAgIGl0KFwiZmluZCBhIGRvY3VtZW50XCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIENvdWNoTWFuYWdlci5maW5kKCdmZicpLnRoZW4oKGQpID0+IHtcblxuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLm9rO1xuICAgICAgICAgICAgZG9uZSgpO1xuXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGRvbmUoRXJyb3IoZXJyKSlcbiAgICAgICAgfSlcblxuXG5cbiAgICB9KTtcbiAgICAvLyB3cml0ZSB0ZXN0cyBhYm91dCBtdWx0aXBsZSB2YWx1ZXMgKDIgaXAgb3IgMiBnYXRld2F5IGZvciB0aGUgc2FtZSBpbnRlcmZhY2UpXG5cbn0pXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
