"use strict";
var index_1 = require('../index');
var chai = require("chai");
var spawnPouchdbServer = require('spawn-pouchdb-server');
var expect = chai.expect;
var tmPort = 3435;
var couchDBDatabase = "http://localhost:" + tmPort + "/" + new Date().getTime;
var CouchManager;
before(function (done) {
    this.timeout(10000);
    spawnPouchdbServer({
        port: tmPort,
        backend: false,
        config: {
            admins: { "adminuser": "adminpass" },
            file: false
        },
        log: {
            file: false,
            level: 'info'
        }
    }, function (error, server) {
        if (error) {
            throw error;
        }
        else {
            CouchManager = new index_1.default(couchDBDatabase, { user: "adminuser", password: "adminpass" });
            done();
        }
    });
});
describe("db testing with auth", function () {
    var o;
    it("create db", function (done) {
        CouchManager.createDB().then(function (d) {
            expect(d).to.be.ok;
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("create a document", function (done) {
        CouchManager.create({
            _id: 'ff'
        }).then(function (d) {
            expect(d).to.be.ok;
            expect(d).to.be.an("Object").to.have.property("_id");
            expect(d).to.have.property("_rev");
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("find a document", function (done) {
        CouchManager.find('ff').then(function (d) {
            o = d;
            expect(d).to.be.an("Object").to.have.property("_id");
            expect(d).to.have.property("_rev");
            expect(d).to.be.ok;
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("update a document", function (done) {
        o.up = "updated";
        CouchManager.update(o).then(function (d) {
            expect(d).to.be.ok;
            expect(d).to.be.an("Object").to.have.property("up");
            expect(d).to.have.property("_id");
            expect(d).to.have.property("_rev");
            expect(d.up).to.be.eq("updated");
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("delete a document", function (done) {
        CouchManager.delete('ff').then(function () {
            CouchManager.find('ff').then(function (d) {
                done(Error("ff still exists"));
            }).catch(function () {
                done();
            });
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("create documents", function (done) {
        CouchManager.create_more([
            {
                "_id": "category_emergency",
                "name": "emergency"
            },
            {
                "_id": "category_hotels",
                "name": "hotels"
            },
            {
                "_id": "subcategory_emergency_hospital",
                "name": "hospital",
                "category": "emergency"
            },
            {
                "_id": "subcategory_emergency_pharmacy",
                "name": "pharmacy",
                "category": "emergency"
            }
        ]).then(function (d) {
            expect(d).to.be.ok;
            expect(d).to.be.an("Array");
            expect(d[0]).to.be.an("Object").to.have.property("_id");
            expect(d[0]).to.be.an("Object").to.have.property("_rev");
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("update documents", function (done) {
        CouchManager.update_more([
            {
                "_id": "category_emergency",
                "name": "emergency",
                "up": "uppetwe"
            },
            {
                "_id": "category_hotels",
                "name": "hotels",
                "up": "uppetwe"
            }
        ]).then(function (d) {
            expect(d).to.be.ok;
            expect(d).to.be.an("Array");
            expect(d[0]).to.be.an("Object");
            expect(d[0]).to.have.property("_id");
            expect(d[0]).to.have.property("_rev");
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("search between keys", function (done) {
        CouchManager.betweenKeys('category_a', 'category_z').then(function (d) {
            expect(d).to.be.ok;
            expect(d).to.be.an("Array");
            expect(d.length).to.be.eq(2);
            expect(d[0]).to.be.ok;
            expect(d[0]).to.be.an("Object");
            expect(d[0]).to.have.property("_id");
            expect(d[0]).to.have.property("_rev");
            expect(d[1]).to.be.an("Object");
            expect(d[1]).to.have.property("_id");
            expect(d[1]).to.have.property("_rev");
            expect(d[0]).to.have.property("_id").that.eq("category_emergency");
            expect(d[1]).to.have.property("_id").that.eq("category_hotels");
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
    it("remove documents", function (done) {
        CouchManager.delete_more(['category_emergency', 'category_hotels']).then(function (d) {
            expect(d).to.be.ok;
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
});

//# sourceMappingURL=data:application/json;base64,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QUFFLFVBQVUsSUFBSTtRQUNoQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUM7WUFDM0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNOLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyRCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFbkMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ25CLElBQUksRUFBRSxDQUFDO1FBRVgsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUMsR0FBRztZQUNULElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtRQUNwQixDQUFDLENBQUMsQ0FBQTtJQUlOLENBQUMsQ0FBQyxDQUFDO0lBR0gsRUFBRSxDQUFDLG1CQUFtQixFQUFFLFVBQVUsSUFBSTtRQUNsQyxDQUFDLENBQUMsRUFBRSxHQUFHLFNBQVMsQ0FBQztRQUNqQixZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUM7WUFDMUIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ25CLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNwRCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFD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LENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFN0IsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBRXRCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRXRDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBSXRDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFDbkUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsaUJBQWlCLENBQUMsQ0FBQztZQUloRSxJQUFJLEVBQUUsQ0FBQztRQUVYLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFDLEdBQUc7WUFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7UUFDcEIsQ0FBQyxDQUFDLENBQUE7SUFFTixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxVQUFVLElBQUk7UUFFakMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDLG9CQUFvQixFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxDQUFDO1lBQ3ZFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUVuQixJQUFJLEVBQUUsQ0FBQztRQUVYLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFDLEdBQUc7WUFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7UUFDcEIsQ0FBQyxDQUFDLENBQUE7SUFFTixDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFBIiwiZmlsZSI6InRlc3Qvd2l0aEF1dGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ291Y2hOb2RlIGZyb20gJy4uL2luZGV4JztcbmltcG9ydCAqIGFzIGNoYWkgZnJvbSBcImNoYWlcIjtcblxuY29uc3Qgc3Bhd25Qb3VjaGRiU2VydmVyID0gcmVxdWlyZSgnc3Bhd24tcG91Y2hkYi1zZXJ2ZXInKTtcblxuY29uc3QgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XG5cbmNvbnN0IHRtUG9ydCA9IDM0MzU7XG5cbmNvbnN0IGNvdWNoREJEYXRhYmFzZSA9IFwiaHR0cDovL2xvY2FsaG9zdDpcIiArIHRtUG9ydCArIFwiL1wiICsgbmV3IERhdGUoKS5nZXRUaW1lO1xuXG5sZXQgQ291Y2hNYW5hZ2VyO1xuXG5iZWZvcmUoZnVuY3Rpb24gKGRvbmUpIHtcbiAgICB0aGlzLnRpbWVvdXQoMTAwMDApO1xuICAgIHNwYXduUG91Y2hkYlNlcnZlcihcbiAgICAgICAge1xuICAgICAgICAgICAgcG9ydDogdG1Qb3J0LFxuICAgICAgICAgICAgYmFja2VuZDogZmFsc2UsXG4gICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICBhZG1pbnM6IHsgXCJhZG1pbnVzZXJcIjogXCJhZG1pbnBhc3NcIiB9LFxuICAgICAgICAgICAgICAgIGZpbGU6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9nOiB7XG4gICAgICAgICAgICAgICAgZmlsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgbGV2ZWw6ICdpbmZvJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IsIHNlcnZlcikge1xuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICBDb3VjaE1hbmFnZXIgPSBuZXcgQ291Y2hOb2RlKGNvdWNoREJEYXRhYmFzZSwgeyB1c2VyOiBcImFkbWludXNlclwiLCBwYXNzd29yZDogXCJhZG1pbnBhc3NcIiB9KTtcblxuICAgICAgICAgICAgICAgIGRvbmUoKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG59KTtcblxuZGVzY3JpYmUoXCJkYiB0ZXN0aW5nIHdpdGggYXV0aFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgIGxldCBvO1xuICAgIGl0KFwiY3JlYXRlIGRiXCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIENvdWNoTWFuYWdlci5jcmVhdGVEQigpLnRoZW4oKGQpID0+IHtcblxuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLm9rO1xuICAgICAgICAgICAgZG9uZSgpO1xuXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGRvbmUoRXJyb3IoZXJyKSlcbiAgICAgICAgfSlcblxuXG5cbiAgICB9KTtcblxuICAgIGl0KFwiY3JlYXRlIGEgZG9jdW1lbnRcIiwgZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgICAgQ291Y2hNYW5hZ2VyLmNyZWF0ZSh7XG4gICAgICAgICAgICBfaWQ6ICdmZidcbiAgICAgICAgfSkudGhlbigoZCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLm9rO1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLmFuKFwiT2JqZWN0XCIpLnRvLmhhdmUucHJvcGVydHkoXCJfaWRcIik7XG4gICAgICAgICAgICBleHBlY3QoZCkudG8uaGF2ZS5wcm9wZXJ0eShcIl9yZXZcIik7XG4gICAgICAgICAgICBkb25lKCk7XG5cbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgZG9uZShFcnJvcihlcnIpKVxuICAgICAgICB9KVxuXG5cblxuICAgIH0pO1xuICAgIGl0KFwiZmluZCBhIGRvY3VtZW50XCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIENvdWNoTWFuYWdlci5maW5kKCdmZicpLnRoZW4oKGQpID0+IHtcbiAgICAgICAgICAgIG8gPSBkO1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLmFuKFwiT2JqZWN0XCIpLnRvLmhhdmUucHJvcGVydHkoXCJfaWRcIik7XG4gICAgICAgICAgICBleHBlY3QoZCkudG8uaGF2ZS5wcm9wZXJ0eShcIl9yZXZcIik7XG5cbiAgICAgICAgICAgIGV4cGVjdChkKS50by5iZS5vaztcbiAgICAgICAgICAgIGRvbmUoKTtcblxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lKEVycm9yKGVycikpXG4gICAgICAgIH0pXG5cblxuXG4gICAgfSk7XG5cblxuICAgIGl0KFwidXBkYXRlIGEgZG9jdW1lbnRcIiwgZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgICAgby51cCA9IFwidXBkYXRlZFwiO1xuICAgICAgICBDb3VjaE1hbmFnZXIudXBkYXRlKG8pLnRoZW4oKGQpID0+IHtcbiAgICAgICAgICAgIGV4cGVjdChkKS50by5iZS5vaztcbiAgICAgICAgICAgIGV4cGVjdChkKS50by5iZS5hbihcIk9iamVjdFwiKS50by5oYXZlLnByb3BlcnR5KFwidXBcIik7XG4gICAgICAgICAgICBleHBlY3QoZCkudG8uaGF2ZS5wcm9wZXJ0eShcIl9pZFwiKTtcbiAgICAgICAgICAgIGV4cGVjdChkKS50by5oYXZlLnByb3BlcnR5KFwiX3JldlwiKTtcbiAgICAgICAgICAgIGV4cGVjdChkLnVwKS50by5iZS5lcShcInVwZGF0ZWRcIik7XG4gICAgICAgICAgICBkb25lKCk7XG5cbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgZG9uZShFcnJvcihlcnIpKVxuICAgICAgICB9KVxuXG4gICAgfSk7XG5cbiAgICBpdChcImRlbGV0ZSBhIGRvY3VtZW50XCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIENvdWNoTWFuYWdlci5kZWxldGUoJ2ZmJykudGhlbigoKSA9PiB7XG5cbiAgICAgICAgICAgIENvdWNoTWFuYWdlci5maW5kKCdmZicpLnRoZW4oKGQpID0+IHtcbiAgICAgICAgICAgICAgICBkb25lKEVycm9yKFwiZmYgc3RpbGwgZXhpc3RzXCIpKVxuXG5cbiAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICAgICAgICBkb25lKClcbiAgICAgICAgICAgIH0pXG5cblxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lKEVycm9yKGVycikpXG4gICAgICAgIH0pXG5cblxuXG4gICAgfSk7XG5cbiAgICBpdChcImNyZWF0ZSBkb2N1bWVudHNcIiwgZnVuY3Rpb24gKGRvbmUpIHtcblxuICAgICAgICBDb3VjaE1hbmFnZXIuY3JlYXRlX21vcmUoW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwiX2lkXCI6IFwiY2F0ZWdvcnlfZW1lcmdlbmN5XCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiZW1lcmdlbmN5XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJfaWRcIjogXCJjYXRlZ29yeV9ob3RlbHNcIixcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJob3RlbHNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcIl9pZFwiOiBcInN1YmNhdGVnb3J5X2VtZXJnZW5jeV9ob3NwaXRhbFwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcImhvc3BpdGFsXCIsXG4gICAgICAgICAgICAgICAgXCJjYXRlZ29yeVwiOiBcImVtZXJnZW5jeVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwiX2lkXCI6IFwic3ViY2F0ZWdvcnlfZW1lcmdlbmN5X3BoYXJtYWN5XCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwicGhhcm1hY3lcIixcbiAgICAgICAgICAgICAgICBcImNhdGVnb3J5XCI6IFwiZW1lcmdlbmN5XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSkudGhlbigoZCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLm9rO1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLmFuKFwiQXJyYXlcIik7XG4gICAgICAgICAgICBleHBlY3QoZFswXSkudG8uYmUuYW4oXCJPYmplY3RcIikudG8uaGF2ZS5wcm9wZXJ0eShcIl9pZFwiKTtcbiAgICAgICAgICAgIGV4cGVjdChkWzBdKS50by5iZS5hbihcIk9iamVjdFwiKS50by5oYXZlLnByb3BlcnR5KFwiX3JldlwiKTtcbiAgICAgICAgICAgIGRvbmUoKTtcblxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lKEVycm9yKGVycikpXG4gICAgICAgIH0pXG5cblxuICAgIH0pO1xuXG4gICAgaXQoXCJ1cGRhdGUgZG9jdW1lbnRzXCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIENvdWNoTWFuYWdlci51cGRhdGVfbW9yZShbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJfaWRcIjogXCJjYXRlZ29yeV9lbWVyZ2VuY3lcIixcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJlbWVyZ2VuY3lcIixcbiAgICAgICAgICAgICAgICBcInVwXCI6IFwidXBwZXR3ZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwiX2lkXCI6IFwiY2F0ZWdvcnlfaG90ZWxzXCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiaG90ZWxzXCIsXG4gICAgICAgICAgICAgICAgXCJ1cFwiOiBcInVwcGV0d2VcIlxuICAgICAgICAgICAgfVxuICAgICAgICBdKS50aGVuKChkKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoZCkudG8uYmUub2s7XG4gICAgICAgICAgICBleHBlY3QoZCkudG8uYmUuYW4oXCJBcnJheVwiKTtcblxuICAgICAgICAgICAgZXhwZWN0KGRbMF0pLnRvLmJlLmFuKFwiT2JqZWN0XCIpO1xuICAgICAgICAgICAgZXhwZWN0KGRbMF0pLnRvLmhhdmUucHJvcGVydHkoXCJfaWRcIik7XG4gICAgICAgICAgICBleHBlY3QoZFswXSkudG8uaGF2ZS5wcm9wZXJ0eShcIl9yZXZcIik7XG4gICAgICAgICAgICBkb25lKCk7XG5cbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgZG9uZShFcnJvcihlcnIpKVxuICAgICAgICB9KVxuXG5cblxuICAgIH0pO1xuaXQoXCJzZWFyY2ggYmV0d2VlbiBrZXlzXCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIENvdWNoTWFuYWdlci5iZXR3ZWVuS2V5cygnY2F0ZWdvcnlfYScsICdjYXRlZ29yeV96JykudGhlbigoZCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLm9rO1xuICAgICAgICAgICAgZXhwZWN0KGQpLnRvLmJlLmFuKFwiQXJyYXlcIik7XG4gICAgICAgICAgICBleHBlY3QoZC5sZW5ndGgpLnRvLmJlLmVxKDIpO1xuXG4gICAgICAgICAgICBleHBlY3QoZFswXSkudG8uYmUub2s7XG5cbiAgICAgICAgICAgIGV4cGVjdChkWzBdKS50by5iZS5hbihcIk9iamVjdFwiKTtcbiAgICAgICAgICAgIGV4cGVjdChkWzBdKS50by5oYXZlLnByb3BlcnR5KFwiX2lkXCIpO1xuICAgICAgICAgICAgZXhwZWN0KGRbMF0pLnRvLmhhdmUucHJvcGVydHkoXCJfcmV2XCIpO1xuXG4gICAgICAgICAgICBleHBlY3QoZFsxXSkudG8uYmUuYW4oXCJPYmplY3RcIik7XG4gICAgICAgICAgICBleHBlY3QoZFsxXSkudG8uaGF2ZS5wcm9wZXJ0eShcIl9pZFwiKTtcbiAgICAgICAgICAgIGV4cGVjdChkWzFdKS50by5oYXZlLnByb3BlcnR5KFwiX3JldlwiKTtcblxuXG5cbiAgICAgICAgICAgIGV4cGVjdChkWzBdKS50by5oYXZlLnByb3BlcnR5KFwiX2lkXCIpLnRoYXQuZXEoXCJjYXRlZ29yeV9lbWVyZ2VuY3lcIik7XG4gICAgICAgICAgICBleHBlY3QoZFsxXSkudG8uaGF2ZS5wcm9wZXJ0eShcIl9pZFwiKS50aGF0LmVxKFwiY2F0ZWdvcnlfaG90ZWxzXCIpO1xuXG5cblxuICAgICAgICAgICAgZG9uZSgpO1xuXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGRvbmUoRXJyb3IoZXJyKSlcbiAgICAgICAgfSlcblxuICAgIH0pO1xuXG4gICAgaXQoXCJyZW1vdmUgZG9jdW1lbnRzXCIsIGZ1bmN0aW9uIChkb25lKSB7XG5cbiAgICAgICAgQ291Y2hNYW5hZ2VyLmRlbGV0ZV9tb3JlKFsnY2F0ZWdvcnlfZW1lcmdlbmN5JywgJ2NhdGVnb3J5X2hvdGVscyddKS50aGVuKChkKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoZCkudG8uYmUub2s7XG5cbiAgICAgICAgICAgIGRvbmUoKTtcblxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lKEVycm9yKGVycikpXG4gICAgICAgIH0pXG5cbiAgICB9KTtcblxufSlcblxuXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
